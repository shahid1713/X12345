import * as t from '@babel/types';
export declare type Replacement = t.Statement | t.Expression | Array<t.Statement> | Array<t.Expression>;
export interface ReplacementsBase {
    [key: string]: Replacement;
}
export declare function program<R extends ReplacementsBase>(template: string): (replacements?: R) => t.File;
export declare function statement<R extends ReplacementsBase>(template: string): (replacements?: R) => t.Statement;
export declare function expression<R extends ReplacementsBase>(template: string): (replacements?: R) => t.Expression;
