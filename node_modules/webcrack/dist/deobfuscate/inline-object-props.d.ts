/**
 * Inline objects that only have string or numeric literal properties.
 * Used by the "String Array Calls Transform" option for moving the
 * decode call arguments into an object.
 * Example:
 * ```js
 * const obj = {
 *   c: 0x2f2,
 *   d: '0x396',
 * };
 * console.log(decode(obj.c, obj.d));
 * ```
 * ->
 * ```js
 * console.log(decode(0x2f2, '0x396'));
 * ```
 */
declare const _default: {
    name: string;
    tags: "safe"[];
    scope: true;
    visitor(): {
        MemberExpression(this: import("../ast-utils").TransformState, path: import("@babel/traverse").NodePath<import("@babel/types").MemberExpression>): void;
        VariableDeclarator(this: import("../ast-utils").TransformState, path: import("@babel/traverse").NodePath<import("@babel/types").VariableDeclarator>): void;
    };
};
export default _default;
//# sourceMappingURL=inline-object-props.d.ts.map