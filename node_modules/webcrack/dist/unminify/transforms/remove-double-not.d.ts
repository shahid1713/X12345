import type { NodePath } from '@babel/traverse';
import * as t from '@babel/types';
declare const _default: {
    name: string;
    tags: "safe"[];
    visitor(): {
        Conditional: {
            exit(this: import("../../ast-utils").TransformState, path: NodePath<t.Conditional>): void;
        };
        UnaryExpression: {
            exit(this: import("../../ast-utils").TransformState, path: NodePath<t.UnaryExpression>): void;
        };
        CallExpression: {
            exit(this: import("../../ast-utils").TransformState, path: NodePath<t.CallExpression>): void;
        };
    };
};
export default _default;
//# sourceMappingURL=remove-double-not.d.ts.map